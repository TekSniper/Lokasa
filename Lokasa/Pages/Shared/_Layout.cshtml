<!DOCTYPE html>
<html lang="fr-fr" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Lokasa</title>
    <link href="~/lib/bulma/css/bulma.css" rel="stylesheet" />
    <link href="~/lib/bulma/css/bulma.min.css" rel="stylesheet" />
    <link href="~/lib/fontawesome/css/all.css" rel="stylesheet" />
    <link href="~/lib/fontawesome/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/sidebar.css" />
    <link rel="stylesheet" href="~/Lokasa.styles.css" asp-append-version="true" />
    <script src="~/js/sidebar.js"></script>
    <link rel="icon" type="image/png" href="~/img/lokasa_icon.png" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style type="text/css">
        .rotate {
        transform: rotate(90deg);
        }

        .menu {
        left: 0;
        background: transparent !important;
        }

        .menu .menu-label {
        font-weight: bolder;
        }

        .menu .menu-list .list {
        position: relative;
        cursor: pointer;
        }

        .menu .menu-list {
        }

        .menu .menu-list .list {
        background: transparent !important;
        }

        .menu .menu-list .list .sub-list {
        background: transparent !important;
        }

        .menu .menu-list .list .sub-list .sub-menu {
        background: transparent !important;
        }

        .menu .menu-list .list .sub-list a:hover {
        background-color: rgba(0, 0, 0, 0.35);
        }

        .menu .menu-list .list a {
        display: block;
        color: #181818 !important;
        text-decoration: none;
        padding: 5px 25px;
        line-height: 30px;
        }

        .menu .menu-list .list a:hover {
        background-color: transparent !important;
        color: #111111;
        transition: 0.3s ease;
        }

        .menu .menu-list .list a .dropdown {
        position: absolute;
        right: 0;
        margin: 7.5px;
        transition: 0.3s ease;
        }

        .menu .menu-list .list .sub-list {
        display: block;
        overflow-x: hidden;
        }

        .sub-menu {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease;
        }

        .sub-menu.open {
        max-height: 500px;
        }

        .sub-menu a {
        color: #fff;
        text-decoration: none;
        padding: 15px 35px 10px;
        line-height: 30px;
        }

        .menu .menu-list .list .sub-menu a:hover {
        background: transparent !important;
        color: #fff;
        transition: 0.3s ease;
        }

        /*.menu .menu-list .list .sub-list:hover + .sub-menu, .sub-menu:hover {
        display:block;
        transition: 0.3s ease;
        }*/
        #sidebar {
        transition: 0.3s ease-in-out;
        transform: translateX(-100%);
        }

        #sidebar.is-active {
        transform: translateX(0);
        }

        .navbar-burger.is-active span {
            background-color: #ff3860; /* Exemple : couleur rouge */
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar is-fixed-top has-shadow mb-6" role="navigation" aria-label="main navigation">
            <div class="navbar-brand">
                <!-- navbar items, navbar burger... -->
                <a class="navbar-item">
                    <strong>LOKASA</strong>
                </a>

                <a class="navbar-burger" role="button" aria-label="menu" aria-expanded="false" data-target="navbarBasic">
                    <span aria-hidden="true"></span>
                    <span aria-hidden="true"></span>
                    <span aria-hidden="true"></span>
                    <span aria-hidden="true"></span>
                </a>
            </div>
            <div id="navbarBasic" class="navbar-menu">
                <!-- navbar start, navbar end -->
                <div class="navbar-start">
                    <span class="navbar-item">
                        <i class="fa-solid fa-circle-user"></i> @Model.LoginAgent
                    </span>
                    <span class="navbar-item">
                        <i class="fa-solid fa-briefcase"></i>&nbsp; @Model.FonctionAgent
                    </span>
                </div>   
                <div class="navbar-end">
                    <span class="navbar-item">
                        <a href="/Agent/Deconnexion" class="button is-danger is-outlined is-small">Se Deconnecter</a>
                    </span>
                </div>
            </div>
        </nav>
    </header>
    <div class="container is-fullhd mt-6 pt-5">
        <div class="columns">
            <div class="column is-one-fifth ml-3">
                <aside class="menu">
                    @if (Model.FonctionAgent.Contains("Directeur") || Model.FonctionAgent.Contains("Secrétaire") 
                    || Model.FonctionAgent.Contains("Admin"))
                    {
                        <p class="menu-label"><i class="fa-solid fa-user-gear"></i>&nbsp;Administrateur</p>
                        <ul class="menu-list">
                            <li class="list">
                                <a href="/Admin/Dashboard" class="sub-list">
                                    <i class="fa-solid fa-gauge"></i> Tableau de bord
                                </a>
                            </li>
                            <li class="list">
                                <a href="/Presence/Presence" class="sub-list">
                                    <i class="fa-solid fa-clipboard-user"></i> Rapport présence
                                </a>
                            </li>
                            <li class="list">
                                <a href="/Tache/Taches" class="sub-list">
                                    <i class="fa-solid fa-list-check"></i> Rapport taches
                                </a>
                            </li>
                        </ul>
                    }
                    @if(Model.FonctionAgent.Contains("Directeur") || Model.FonctionAgent.Contains("Admin"))
                    {
                        <p class="menu-label">Gestion des agents</p>
                        <ul class="menu-list">
                            <li class="list">
                                <a href="/Agent/LesAgents?manlog=all" class="sub-list">
                                    <i class="fa-solid fa-list"></i> Les agents
                                </a>
                            </li>
                            <li class="list">
                                <a href="/Agent/CreerAgent" class="sub-list">
                                    <i class="fa-solid fa-user-check"></i> Créer agent
                                </a>
                            </li>
                        </ul>
                    }
                    
                    <p class="menu-label">Gestion de Présence</p>
                    <ul class="menu-list">
                        <li class="list">
                            <a class="sub-list" href="/Presence/Arrivee">
                                <i class="fa-solid fa-business-time is-small"></i> Arrivée
                            </a>
                        </li>
                        <li class="list">
                            <a class="sub-list" href="/Presence/Depart">
                                <i class="fa-solid fa-business-time"></i> Départ
                            </a>
                        </li>
                        @* @if(Model.FonctionAgent == "Directeur")
                        {
                            <li class="list">
                                <a class="sub-list" href="/Presence/Presence">
                                    <i class="fa-solid fa-clipboard-user"></i> Présence
                                </a>
                            </li>
                        }  *@                       
                    </ul>
                    <p class="menu-label">Gestion des Tâches</p>
                    <ul class="menu-list">
                        <li class="list">
                            <a class="sub-list" href="/Tache/Creer">
                                <i class="fa-solid fa-list-check"></i> Nouvelle tâche
                            </a>
                        </li>
                        <li class="list">
                            <a class="sub-list" href="/Tache/Taches">
                                <i class="fa-solid fa-list-check"></i> Liste des tâches
                            </a>
                        </li>
                    </ul>
                </aside>
            </div>
            <div class="column">
                @*<!-- Barre de navigation visible uniquement en mobile -->
                <nav class="navbar is-light is-hidden-tablet" style="z-index: 30;">
                    <div class="navbar-brand">
                        <!-- Bouton burger uniquement en mobile -->
                        <a role="button" class="navbar-burger" id="menu-toggle-2" aria-label="menu" aria-expanded="false">
                            <span aria-hidden="true"></span>
                            <span aria-hidden="true"></span>
                            <span aria-hidden="true"></span>
                        </a>
                    </div>
                </nav>*@
                <div class="section box">
                    <main role="main" class="pb-3">
                        @RenderBody()
                    </main>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/fontawesome/js/all.js"></script>
    <script src="~/lib/fontawesome/js/all.min.js"></script>
    <script>
                document.addEventListener('DOMContentLoaded', () => {
          (document.querySelectorAll('.notification .delete') || []).forEach(($delete) => {
            const $notification = $delete.parentNode;

            $delete.addEventListener('click', () => {
              $notification.parentNode.removeChild($notification);
            });
          });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>